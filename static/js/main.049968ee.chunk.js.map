{"version":3,"sources":["components/Search.tsx","components/OrganisationItem.tsx","components/OrganisationList.tsx","components/RepositoryItem.tsx","components/RepositoryList.tsx","components/UserInfo.tsx","components/Result.tsx","api/github-api.ts","types/Repository.ts","types/Organisation.ts","types/User.ts","App.tsx","index.tsx"],"names":["Search","searchTerm","setSearchTerm","update","onSubmit","e","preventDefault","noValidate","autoComplete","Box","display","alignItems","flexDirection","m","TextField","onChange","target","value","label","Button","type","variant","color","OrganisationItem","organisation","my","Card","raised","Link","href","url","underline","p","Grid","container","item","xs","height","width","src","avatar_url","alt","Typography","login","paragraph","description","OrganisationList","organisations","direction","align","map","org","key","RepositoryItem","repository","justify","name","ErrorOutline","open_issues_count","Restaurant","forks_count","Date","created_at","toDateString","RepositoryList","repositories","repo","UserInfo","user","justifyContent","Result","sm","md","lg","spacing","BASE_URL","getRepos","username","axios","get","then","response","data","catch","err","Error","Repository","open_issue_count","this","Organisation","User","App","useState","setOrganisations","setRepositories","error","setError","setUser","loading","setLoading","a","raw_repositories","undefined","message","html_url","raw_user","raw_organisations","all","orgs","res","Container","LinearProgress","Collapse","in","length","bgcolor","px","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.049968ee.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { Box, TextField, Button } from \"@material-ui/core\";\n\nconst Search: FunctionComponent<{\n  searchTerm: string;\n  setSearchTerm: Function;\n  update: Function;\n}> = ({ searchTerm, setSearchTerm, update }) => {\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    update();\n  };\n  return (\n    <form onSubmit={handleSubmit} noValidate autoComplete=\"off\">\n      <Box display=\"flex\" alignItems=\"center\" flexDirection=\"row\">\n        <Box m={2}>\n          <TextField\n            onChange={e => setSearchTerm(e.target.value)}\n            value={searchTerm}\n            label=\"Search\"\n          />\n        </Box>\n        <Box m={2}>\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n            Search\n          </Button>\n        </Box>\n      </Box>\n    </form>\n  );\n};\n\nexport default Search;\n","import React, { FunctionComponent } from \"react\";\nimport Organisation from \"../types/Organisation\";\nimport { Card, Box, Grid, Typography, Link } from \"@material-ui/core\";\n\nconst OrganisationItem: FunctionComponent<{ organisation: Organisation }> = ({\n  organisation\n}) => {\n  return (\n    <Box my={1}>\n      <Card raised>\n        <Link href={organisation.url} underline=\"none\">\n          <Box p={1}>\n            <Grid container>\n              <Grid item xs={3}>\n                <img\n                  height=\"100%\"\n                  width=\"100%\"\n                  src={organisation.avatar_url}\n                  alt=\"Organisation avatar\"\n                />\n              </Grid>\n              <Grid item xs={9}>\n                <Box p={2}>\n                  <Typography color=\"textPrimary\" variant=\"h4\">\n                    {organisation.login}\n                  </Typography>\n                </Box>\n              </Grid>\n              <Grid item xs={12}>\n                <Box my={2}>\n                  <Typography color=\"textPrimary\" paragraph={true}>\n                    {organisation.description}\n                  </Typography>\n                </Box>\n              </Grid>\n            </Grid>\n          </Box>\n        </Link>\n      </Card>\n    </Box>\n  );\n};\n\nexport default OrganisationItem;\n","import React, { FunctionComponent } from \"react\";\nimport Organisation from \"../types/Organisation\";\nimport OrganisationItem from \"./OrganisationItem\";\nimport { Grid, Typography, Box } from \"@material-ui/core\";\n\nconst OrganisationList: FunctionComponent<{\n  organisations: Organisation[];\n}> = ({ organisations }) => {\n  return (\n    <Box my={1}>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Box p={2}>\n            <Typography variant=\"h3\" align=\"center\">\n              Organisations\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item>\n          {organisations.map((org: Organisation) => (\n            <OrganisationItem key={org.login} organisation={org} />\n          ))}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default OrganisationList;\n","import React, { FunctionComponent } from \"react\";\nimport Repository from \"../types/Repository\";\nimport { Card, Box, Grid, Link, Typography } from \"@material-ui/core\";\nimport { Restaurant, ErrorOutline } from \"@material-ui/icons\";\n\nconst RepositoryItem: FunctionComponent<{ repository: Repository }> = ({\n  repository\n}) => {\n  return (\n    <Box my={1}>\n      <Card raised>\n        <Link href={repository.url} underline=\"none\">\n          <Box p={2}>\n            <Grid container direction=\"column\">\n              <Grid item>\n                <Grid container justify=\"space-between\">\n                  <Grid item xs={8}>\n                    <Typography color=\"textPrimary\" variant=\"h4\">\n                      {repository.name}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Grid container justify=\"center\" alignItems=\"center\">\n                      <Typography color=\"textPrimary\">\n                        <ErrorOutline /> {repository.open_issues_count}\n                      </Typography>\n                      <Typography color=\"textPrimary\">\n                        <Restaurant /> {repository.forks_count}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item>\n                <Typography color=\"textSecondary\">\n                  Created: {new Date(repository.created_at).toDateString()}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography color=\"textPrimary\">\n                  {repository.description}\n                </Typography>\n              </Grid>\n            </Grid>\n          </Box>\n        </Link>\n      </Card>\n    </Box>\n  );\n};\n\nexport default RepositoryItem;\n","import React, { FunctionComponent } from \"react\";\nimport Repository from \"../types/Repository\";\nimport { Box, Grid, Typography } from \"@material-ui/core\";\nimport RepositoryItem from \"./RepositoryItem\";\n\nconst RepositoryList: FunctionComponent<{\n  repositories: Repository[];\n}> = ({ repositories }) => {\n  return (\n    <Box my={1}>\n      <Grid container direction=\"column\">\n        <Grid item>\n          <Box p={2}>\n            <Typography variant=\"h3\" align=\"center\">\n              Repositories\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item>\n          {repositories.map((repo: Repository) => (\n            <RepositoryItem key={repo.name} repository={repo} />\n          ))}\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default RepositoryList;\n","import React, { FunctionComponent } from \"react\";\nimport User from \"../types/User\";\nimport { Card, Link, Box, Typography, Grid } from \"@material-ui/core\";\n\nconst UserInfo: FunctionComponent<{ user: User }> = ({ user }) => {\n  return (\n    <Card raised>\n      <Link href={user.url} underline=\"none\">\n        <Box p={1} display=\"flex\" justifyContent=\"flex-start\">\n          <Grid container>\n            <Grid item xs={3}>\n              <Box m={2}>\n                <img width=\"100%\" src={user.avatar_url} alt=\"Avatar\" />\n              </Box>\n            </Grid>\n            <Grid item xs={9}>\n              <Box m={2}>\n                <Typography color=\"textPrimary\">\n                  Username: {user?.login}\n                </Typography>\n                <Typography color=\"textPrimary\">Name: {user?.name}</Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n      </Link>\n    </Card>\n  );\n};\n\nexport default UserInfo;\n","import React, { FunctionComponent } from \"react\";\nimport OrganisationList from \"./OrganisationList\";\nimport RepositoryList from \"./RepositoryList\";\nimport Organisation from \"../types/Organisation\";\nimport Repository from \"../types/Repository\";\nimport User from \"../types/User\";\nimport UserInfo from \"../components/UserInfo\";\nimport { Box, Grid } from \"@material-ui/core\";\n\nconst Result: FunctionComponent<{\n  organisations: Organisation[];\n  repositories: Repository[];\n  user: User | undefined;\n}> = ({ organisations, repositories, user }) => {\n  return user ? (\n    <Box>\n      <Grid container>\n        <Grid item xs={12} sm={9} md={6} lg={6}>\n          <UserInfo user={user} />\n        </Grid>\n      </Grid>\n      <Grid container spacing={2} >\n        <Grid item xs={12} sm={12} md={6}>\n          <OrganisationList organisations={organisations} />\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          <RepositoryList repositories={repositories} />\n        </Grid>\n      </Grid>\n    </Box>\n  ) : (\n    <Box></Box>\n  );\n};\n\nexport default Result;\n","// Feel free to use something else than 'axios', for example 'ky'\nimport axios from \"axios\";\n\n// Documentation is at https://developer.github.com/v3/\nconst BASE_URL = \"https://api.github.com\";\n\nfunction getRepos(username: string) {\n  const url = `${BASE_URL}/users/${username}/repos?per_page=250`;\n  return axios\n    .get(url)\n    .then(response => response.data)\n    .catch(err => {throw new Error(err)})\n}\n\nfunction getUserData(username: string) {\n  return axios\n    .all([\n      axios.get(`${BASE_URL}/users/${username}`),\n      axios.get(`${BASE_URL}/users/${username}/orgs`)\n    ])\n    .then(([user, orgs]) => ({\n      user: user.data,\n      orgs: orgs.data\n    }))\n    .catch(err => {throw new Error(err)});\n}\n\nexport { getRepos, getUserData };\n","class Repository {\n    name: string;\n    open_issues_count: number;\n    created_at: string;\n    description: string;\n    forks_count: number;\n    url: string;\n\n\n    constructor(name: string, open_issue_count: number, created_at: string, description: string, forks_count: number, url: string) {\n        this.name = name;\n        this.open_issues_count = open_issue_count;\n        this.created_at = created_at;\n        this.description = description;\n        this.forks_count = forks_count;\n        this.url = url;\n    }\n}\n\nexport default Repository;","class Organisation {\n    login: string;\n    description: string;\n    avatar_url: string;\n    url: string;\n\n    constructor(login: string, description: string, avatar_url: string, url: string){\n        this.login = login;\n        this.description = description;\n        this.avatar_url = avatar_url;\n        this.url = url;\n    }\n}\n\nexport default Organisation;","class User {\n    login:string;\n    name:string;\n    avatar_url:string;\n    url: string;\n\n    constructor(login: string, name: string, avatar_url: string, url: string) {\n        this.login = login;\n        this.name = name;\n        this.avatar_url = avatar_url;\n        this.url = url;\n\n    }\n}\n\nexport default User;","import React, { useState } from \"react\";\n\nimport Search from \"./components/Search\";\nimport Result from \"./components/Result\";\n\nimport { getRepos, getUserData } from \"./api/github-api\";\nimport Repository from \"./types/Repository\";\nimport Organisation from \"./types/Organisation\";\nimport User from \"./types/User\";\n\nimport {\n  Container,\n  Box,\n  Collapse,\n  Typography,\n  LinearProgress\n} from \"@material-ui/core\";\nimport ErrorOutlineIcon from \"@material-ui/icons/ErrorOutline\";\n\nconst GITHUB_BASE_URL = \"https://github.com/\";\n\nfunction App() {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [organisations, setOrganisations] = useState<Organisation[]>([]);\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n  const [error, setError] = useState<string>(\"\");\n  const [user, setUser] = useState<User | undefined>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const update = async () => {\n    setError(\"\");\n    setLoading(true);\n    let raw_repositories: any = [];\n    try {\n      raw_repositories = await getRepos(searchTerm);\n    } catch (error) {\n      setOrganisations([]);\n      setRepositories([]);\n      setUser(undefined);\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n    setRepositories(\n      raw_repositories.map(\n        (repo: any) =>\n          new Repository(\n            repo.name,\n            repo.open_issues_count,\n            repo.created_at,\n            repo.description,\n            repo.forks_count,\n            repo.html_url\n          )\n      )\n    );\n\n    let raw_user: any = {};\n    let raw_organisations: any = [];\n    try {\n      const res = await getUserData(searchTerm);\n      raw_user = res.user;\n      raw_organisations = res.orgs;\n    } catch (error) {\n      setOrganisations([]);\n      setRepositories([]);\n      setError(error.message);\n      setLoading(false);\n      return;\n    }\n\n    setUser(\n      new User(\n        raw_user.login,\n        raw_user.name,\n        raw_user.avatar_url,\n        raw_user.html_url\n      )\n    );\n\n    setOrganisations(\n      raw_organisations.map(\n        (org: any) =>\n          new Organisation(\n            org.login,\n            org.description,\n            org.avatar_url,\n            `${GITHUB_BASE_URL}${org.login}`\n          )\n      )\n    );\n\n    setLoading(false);\n  };\n\n  return (\n    <Container>\n      <Search\n        searchTerm={searchTerm}\n        setSearchTerm={setSearchTerm}\n        update={update}\n      />\n      {loading && <LinearProgress variant=\"query\" />}\n      <Collapse in={error.length > 0}>\n        <Box\n          p={2}\n          my={1}\n          bgcolor=\"error.main\"\n          display=\"flex\"\n          alignItems=\"center\"\n          justifyContent=\"space-between\"\n        >\n          <Box px={1}>\n            <Typography>{error}</Typography>\n          </Box>\n          <Box px={1}>\n            <ErrorOutlineIcon />\n          </Box>\n        </Box>\n      </Collapse>\n      <Result\n        repositories={repositories}\n        organisations={organisations}\n        user={user}\n      />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}